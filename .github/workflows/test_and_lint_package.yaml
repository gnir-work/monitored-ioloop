name: test

on: pull_request
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

env:
  GROUPS: code_quality

jobs:
  test:
    strategy:
      fail-fast: true
      matrix:
        os: [ "ubuntu-latest" ]
        python-version: [ "3.9", "3.10", "3.11", "3.12" ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Create groups cache key
        id: create-groups-cache-key
        run: |
          echo groups_cache_key='${{ env.GROUPS }}' | sed 's/,/-/g' >> $GITHUB_OUTPUT

      - name: Load cached venv
        id: cached-uv-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/uv.lock') }}-${{ steps.create-groups-cache-key.outputs.groups_cache_key }}

      - name: Install just
        uses: extractions/setup-just@v2

      - name: Install dependencies
        if: steps.cached-uv-dependencies.outputs.cache-hit != 'true'
        run: just install $GROUPS

      - name: Lint code
        run: just lint monitored_ioloop

      - name: Run tests
        run: |
          uv run pytest tests -n auto --junitxml=test-results.xml --cov=monitored_ioloop --cov-report=xml

      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-xml-coverage-path: ./coverage.xml
          unique-id-for-comment: pytest-coverage-report
          title: Pytest coverage report
          junitxml-path: ./test-results.xml
          junitxml-title: Pytest test summary